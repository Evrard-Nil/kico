openapi: 3.0.0
info:
  title: Kico API
  version: 0.0.0
servers:
  - url: http://localhost.com/api/v1
paths:
  /videos:
    description: Allow to get informations concerning videos stored and their state.
    summary: Operations on videos
    get:
      operationId: getVideos
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Video"
                type: array
          description: Videos
        default:
          description: Default error sample response
      summary: Retrieve all videos
  /video/{id}:
    summary: Operation on the video {id}
    delete:
      operationId: deleteVideo
      parameters:
        - description: Numeric ID of the video to delete
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple
      responses:
        "200":
          description: Deletion sucessful
        default:
          description: Default error sample response
      summary: delete a video
    get:
      operationId: getVideo
      parameters:
        - description: Numeric ID of the video to get
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
          description: A video
        default:
          description: Default error sample response
      summary: Retrieve a single video
    put:
      operationId: updateVideo
      parameters:
        - description: Numeric ID of the video to update
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple

      requestBody:
        description: new data of this video
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Video"

      responses:
        "200":
          description: The updated data for this video
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
        default:
          description: Default error sample response
      summary: Update a video
  /video:
    post:
      operationId: addVideo
      requestBody:
        description: Videos files
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                fileName:
                  type: string
                  format: binary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
          description: A video
        default:
          description: Default error sample response
      summary: Add a  video
  /video/{id}/images:
    get:
      operationId: getImagesFromVideo
      summary: Retrieve all images linked to a video
      parameters:
        - description: Numeric ID of the video
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Image"
          description: images linked to video
        default:
          description: Default error sample response
    post:
      operationId: addImageToVideo
      summary: Upload an image linked to a video
      parameters:
        - description: Numeric ID of the video
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple
      requestBody:
        description: Data of this new iamge
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                fileName:
                  type: string
                  format: binary
                secteur_id:
                  type: string
                time:
                  type: string
      responses:
        "200":
          description: Newly uploaded image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
        default:
          description: Default error sample response
  /images/{id}:
    get:
      operationId: getImage
      summary: Retrieve an image
      parameters:
        - description: Numeric ID of the image
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
          description: An image
        default:
          description: Default error sample response
    put:
      operationId: updateImage
      summary: update an image
      parameters:
        - description: Numeric ID of the image
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple

      requestBody:
        description: New data of image
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Image"

      responses:
        "200":
          description: Newly update image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Image"
        default:
          description: Default error sample response

    delete:
      operationId: deleteImage
      summary: Deletes an image
      parameters:
        - description: Numeric ID of the image
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: integer
          style: simple
      responses:
        "200":
          description: Delete went fine
        default:
          description: Default error sample response

components:
  schemas:
    Secteur:
      description: A secteur in abdomen
      type: object
      properties:
        index:
          type: number
        name:
          type: string
    VideoState:
      description: State of a video
      enum:
        - imported
        - segmented
        - annotated
      nullable: false
      type: string
    Video:
      description: A video stored
      example:
        id: abc4
        url: https://www.youtube.com/watch?v=-5KAN9_CzSA
        date: "2017-07-21T17:32:28Z"
        scorePci: 14.5
        title: A great video
        state: imported
      nullable: false
      type: object
      properties:
        id:
          type: string
        state:
          $ref: "#/components/schemas/VideoState"
        annotated_by:
          type: string
        date:
          type: string
          format: date-time
        score_pci:
          type: number
        url:
          type: string
        title:
          type: string
    Image:
      description: An extracted image from a video
      type: object
      nullable: false
      properties:
        id:
          type: number
        secteur_id:
          type: number
        name:
          type: string
        time:
          type: string
        video_id:
          type: number
        url:
          type: string
