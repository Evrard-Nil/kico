/*
 * Kico API
 *
 * This file describe the business logic of the kico api
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"fmt"
	"log"

	"go.mongodb.org/mongo-driver/mongo"
)

// ApiService is a service that implents the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type ApiService struct {
	dbClient mongo.Client
}

// NewDefaultApiService creates a default api service
func NewApiService(client mongo.Client) DefaultApiServicer {
	return &ApiService{dbClient: client}
}

// AddImageToVideo - Upload an image linked to a video
func (s *ApiService) AddImageToVideo(ctx context.Context, id int32, image Image) (interface{}, error) {
	log.Printf("AddImageToVideo")
	return "OK", nil
}

// AddVideo - Add a  video
func (s *ApiService) AddVideo(ctx context.Context, video Video) (interface{}, error) {
	log.Printf("AddVideo")
	collection := s.dbClient.Database("ico").Collection("videos")
	insertResult, err := collection.InsertOne(context.TODO(), video)

	if err != nil {
		log.Fatal(err)
		return "Insertion error", err
	}

	fmt.Println("Inserted post with ID:", insertResult.InsertedID)

	return "OK", nil
}

// DeleteImage - Deletes an image
func (s *ApiService) DeleteImage(ctx context.Context, id int32) (interface{}, error) {
	log.Printf("DeleteImage")
	return "OK", nil
}

// DeleteVideo - delete a video
func (s *ApiService) DeleteVideo(ctx context.Context, id int32) (interface{}, error) {
	log.Printf("DeleteVideo")
	return "OK", nil
}

// GetImage - Retrieve an image
func (s *ApiService) GetImage(ctx context.Context, id int32) (interface{}, error) {
	log.Printf("GetImage")
	return "OK", nil
}

// GetImagesFromVideo - Retrieve all images linked to a video
func (s *ApiService) GetImagesFromVideo(ctx context.Context, id int32) (interface{}, error) {
	log.Printf("GetImagesFromVideo")
	return "OK", nil
}

// GetVideo - Retrieve a single video
func (s *ApiService) GetVideo(ctx context.Context, id int32) (interface{}, error) {
	log.Printf("GetVideo")
	return "OK", nil
}

// GetVideos - Retrieve all videos
func (s *ApiService) GetVideos(ctx context.Context) (interface{}, error) {
	log.Printf("GetVideos")
	return "OK", nil
}

// UpdateImage - update an image
func (s *ApiService) UpdateImage(ctx context.Context, id int32, image Image) (interface{}, error) {
	log.Printf("UpdateImage")
	return "OK", nil
}

// UpdateVideo - Update a video
func (s *ApiService) UpdateVideo(ctx context.Context, id int32, video Video) (interface{}, error) {
	log.Printf("UpdateVideo")
	return "OK", nil
}
